C51 COMPILER V9.00   SERI12864                                                             11/24/2011 17:06:55 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SERI12864
OBJECT MODULE PLACED IN seri12864.OBJ
COMPILER INVOKED BY: D:\installs soft disk\Keil C51\C51\BIN\C51.EXE seri12864.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include "seri12864.h"  
   3          
   4                  
   5                          void  delay_50us(uint j)   //延时50uS  
   6              {   
   7   1              uint  i; 
   8   1              for(; j>0; j--); 
   9   1              for(i=19; i>0; i--);  
  10   1          }
  11          
  12          //串行发送一字节数据   
  13          void send_byte(uchar  dat)   
  14              {   
  15   1                       uchar i;   
  16   1                       for(i=0;i<8;i++)   
  17   1                      {   
  18   2                        e_clk=0;   
  19   2                        if(dat&0x80)//读取最高位的值如果是1则rw_sid为1，否则rw_sid为0；
  20   2                        rw_sid=1;
  21   2                        else     
  22   2                        rw_sid=0; 
  23   2                                        e_clk=1;   
  24   2                        dat=dat<<1; //右移一位  
  25   2                       }   
  26   1          } 
  27          
  28          //写控制命令分三个字节写  
  29          void     wri_12864(uchar value,uchar  dat)   
  30              {
  31   1                    send_byte(value);//串口控制格式 1111 1000     RW=0,RS=0  RW=0表示数据从MCU写到LCD RS=0表示数
             -据是控制指令 
  32   1                    send_byte(dat&0xF0);//并行8位数据高4位格式 1111 0000  低四位置0  RW=1表示数据从LCD写到MCD RS
             -=1表示显示数据 
  33   1                    send_byte((dat&0x0F)<<4);//并行8位数据低4位格式 高四位置0 0000 1111  左移4位后位1111 0000 
  34   1                                
  35   1          }
  36          
  37                   void dis_line(uchar n,uchar m,uchar *s) //n表示行m表示列 s 表示字符串 写字符在哪行那列
  38          {
  39   1        
  40   1          switch(n)
  41   1       {
  42   2           case 1:wri_12864(comd, 0x80+m-1);break;
  43   2           case 2:wri_12864(comd,0x90+m-1);break;
  44   2           case 3:wri_12864(comd,0x88+m-1);break;
  45   2           case 4:wri_12864(comd,0x98+m-1);break;
  46   2        default:;
  47   2       }
  48   1      
  49   1        while(*s>0)
  50   1       {
  51   2          wri_12864(date,*s);
  52   2          s++;
  53   2          delay_50us(1000);
C51 COMPILER V9.00   SERI12864                                                             11/24/2011 17:06:55 PAGE 2   

  54   2       }
  55   1      }
  56          
  57          void dis_page(uchar *s)  //写完第一页
  58          {uchar datecnt;
  59   1      
  60   1       for(datecnt=0;datecnt<64;datecnt++)
  61   1       {  
  62   2         
  63   2        if(datecnt==0) wri_12864(comd,0x80);
  64   2        if(datecnt==16)wri_12864(comd,0x90);
  65   2        if(datecnt==32)wri_12864(comd,0x88);
  66   2        if(datecnt==48)wri_12864(comd,0x98);
  67   2        
  68   2        
  69   2        
  70   2        wri_12864(date,*s);
  71   2        s++;
  72   2        delay_50us(2000);     
  73   2         while(*s=='\0')
  74   2         continue;
  75   2      
  76   2         }
  77   1       
  78   1         
  79   1       
  80   1      }
  81           
  82          
  83           
  84          
  85           
  86          
  87          
  88             //初始化     LCM   
  89           void     init_12864(void)   
  90              {   
  91   1                   delay_50us(100); //初始化等待时间40ms  
  92   1                   wri_12864(comd,0x30);//功能设置，一次送8位数据，基本指令集   
  93   1                   delay_50us(3);     //等待是间要大于100个us
  94   1                               wri_12864(comd,0x30);//功能设置，一次送8位数据，基本指令集 
  95   1                               delay_50us(2); //等待是间要大于37个us 
  96   1                               wri_12864(comd,0x0c);//0000,1100       整体显示，游标off，游标位置off 
  97   1                               delay_50us(3); //等待是间要大于37个us  
  98   1                   wri_12864(comd,0x01);//0000,0001     清屏   
  99   1                   delay_50us(200);   //等待时间大于10ms
 100   1                               wri_12864(comd,0x06);//0000,0010     DDRAM地址归位   
 101   1                   delay_50us(10);
 102   1          }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    290    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
