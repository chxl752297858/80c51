C51 COMPILER V9.01   1                                                                     10/04/2012 10:52:40 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 1
OBJECT MODULE PLACED IN 1.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE 1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /********12M¾§Õñstc89c52µ¥Æ¬»úDS18B20³ÌÐò****************/
   2            #include<reg52.h>
   3            #include<intrins.h>
   4            #define uchar unsigned char
   5            #define uint  unsigned char
   6           
   7            sbit e_clk=P0^1;  //´®ÐÐÊ±ÖÓÐÅºÅ
   8            sbit rw_sid=P0^0; //´®ÐÐÊý¾ÝÏß
   9                   
  10          
  11            sbit dq=P0^7;//DS18B20Êý¾ÝÒý½Å
  12            uint temp,flag,ch;
  13            
  14             void  delay_50us(uint j)   //ÑÓÊ±50uS  
  15              {   
  16   1              uint  i; 
  17   1              for(; j>0; j--); 
  18   1              for(i=19; i>0; i--);  
  19   1          }
  20          
  21          //´®ÐÐ·¢ËÍÒ»×Ö½ÚÊý¾Ý   
  22          void send_byte(uchar  dat)   
  23              {   
  24   1                       uchar i;   
  25   1                       for(i=0;i<8;i++)   
  26   1                      {   
  27   2                        e_clk=0;   
  28   2                        if(dat&0x80)//¶ÁÈ¡×î¸ßÎ»µÄÖµÈç¹ûÊÇ1Ôòrw_sidÎª1£¬·ñÔòrw_sidÎª0£»
  29   2                        rw_sid=1;
  30   2                        else     
  31   2                        rw_sid=0; 
  32   2                                        e_clk=1;   
  33   2                        dat=dat<<1; //ÓÒÒÆÒ»Î»  
  34   2                       }   
  35   1          } 
  36          
  37          //Ð´¿ØÖÆÃüÁî·ÖÈý¸ö×Ö½ÚÐ´  
  38          void     write_com(uchar  dat)   
  39              {
  40   1                    send_byte(0xF8);//´®¿Ú¿ØÖÆ¸ñÊ½ 1111 1000     RW=0,RS=0  RW=0±íÊ¾Êý¾Ý´ÓMCUÐ´µ½LCD RS=0±íÊ¾Êý¾
             -ÝÊÇ¿ØÖÆÖ¸Áî 
  41   1                    send_byte(dat&0xF0);//²¢ÐÐ8Î»Êý¾Ý¸ß4Î»¸ñÊ½ 1111 0000  µÍËÄÎ»ÖÃ0  RW=1±íÊ¾Êý¾Ý´ÓLCDÐ´µ½MCD RS
             -=1±íÊ¾ÏÔÊ¾Êý¾Ý 
  42   1                    send_byte((dat&0x0F)<<4);//²¢ÐÐ8Î»Êý¾ÝµÍ4Î»¸ñÊ½ ¸ßËÄÎ»ÖÃ0 0000 1111  ×óÒÆ4Î»ºóÎ»1111 0000 
  43   1                                
  44   1          }
  45          
  46          
  47          //Ð´ÏÔÊ¾Êý¾Ý»òµ¥×Ö½Ú×Ö·û   
  48          void     write_data(uchar dat)   
  49              
  50              {         send_byte(0xFA);//1111 1010     RW=0,RS=1   
  51   1                    send_byte(dat&0xF0);//¸ßËÄÎ»   
  52   1                    send_byte((dat&0x0F)<<4);//µÍËÄÎ»  
  53   1          }
C51 COMPILER V9.01   1                                                                     10/04/2012 10:52:40 PAGE 2   

  54          
  55          
  56            //³õÊ¼»¯     LCM   
  57          void     init_12864(void)   
  58              {   
  59   1                   delay_50us(100); //³õÊ¼»¯µÈ´ýÊ±¼ä40ms  
  60   1                   write_com(0x30);//¹¦ÄÜÉèÖÃ£¬Ò»´ÎËÍ8Î»Êý¾Ý£¬»ù±¾Ö¸Áî¼¯   
  61   1                   delay_50us(3);     //µÈ´ýÊÇ¼äÒª´óÓÚ100¸öus
  62   1                               write_com(0x30);//¹¦ÄÜÉèÖÃ£¬Ò»´ÎËÍ8Î»Êý¾Ý£¬»ù±¾Ö¸Áî¼¯ 
  63   1                               delay_50us(2); //µÈ´ýÊÇ¼äÒª´óÓÚ37¸öus 
  64   1                               write_com(0x0C);//0000,1100       ÕûÌåÏÔÊ¾£¬ÓÎ±êoff£¬ÓÎ±êÎ»ÖÃoff 
  65   1                               delay_50us(3); //µÈ´ýÊÇ¼äÒª´óÓÚ37¸öus  
  66   1                   write_com(0x01);//0000,0001     ÇåÆÁ   
  67   1                   delay_50us(200);   //µÈ´ýÊ±¼ä´óÓÚ10ms
  68   1                               write_com(0x06);//0000,0010     DDRAMµØÖ·¹éÎ»   
  69   1                   delay_50us(10);
  70   1          }
  71          
  72          
  73            //******************************************
  74            //ÑÓÊ±º¯Êý
  75            //*****************************************
  76           
  77            void delay(unsigned int us)
  78             {
  79   1         while(us--);
  80   1         }
  81             //******************************************
  82             //ds18b20¸´Î»º¯Êý
  83             //******************************************
  84             void reset(void)
  85             {
  86   1          uchar x;//
  87   1          dq=1;//
  88   1          delay(8);//ÑÓÊ±
  89   1              dq=0;
  90   1              delay(80); //À­µÍ³ÖÐø480~960us
  91   1              dq=1; //
  92   1              delay(20);//À­¸ß³ÖÐø60~120us
  93   1              x=dq;
  94   1              delay(20);
  95   1          }
  96           //******************************************
  97           //´Óds18b20ÖÐ¶ÁÒ»¸ö×Ö½Ú
  98           //******************************************
  99           uchar readbyte(void)
 100           {uchar i,value;
 101   1        
 102   1        for(i=0;i<8;i++)
 103   1        {dq=0;
 104   2         value>>=1;
 105   2         dq=1;
 106   2         if(dq)
 107   2         value|=0x80;
 108   2         delay(4);//ÑÓÊ±ÈÃµ¥Æ¬»ú²ÉÑù
 109   2         }
 110   1        return(value);
 111   1        }
 112              //****************************************
 113           // ´Óds18b20ÖÐÐ´Ò»¸ö×Ö½Ú
 114           //***************************************
 115           void writebyte(uchar dat)
C51 COMPILER V9.01   1                                                                     10/04/2012 10:52:40 PAGE 3   

 116           {
 117   1        uchar i=0;
 118   1        for(i=0;i<8;i++)
 119   1        {dq=0;
 120   2         dq=dat&0x01; //´ÓµØÎ»¿ªÊ¼Ð´
 121   2         delay(5); //ÑÓÊ±60~120US
 122   2         dq=1;   //   À­¸ß
 123   2         dat>>=1; //ÓÒÒÆ1Î»
 124   2         }
 125   1         delay(4);
 126   1        }
 127           
 128             
 129             //********************************************
 130            //  ´ÓDS18B20ÖÐ¶ÁÈ¡ÊµÊ±ÎÂ¶ÈÖµ
 131               //********************************************
 132            uchar readtemp(void)
 133            {
 134   1        
 135   1        uchar a,b;
 136   1       { 
 137   2        reset(); //³õÊ¼»¯18b20
 138   2        writebyte(0xcc);//Ìø¹ýROM
 139   2        writebyte(0x44);//Æô¶¯ÎÂ¶È²âÁ¿
 140   2        delay(50);
 141   2      
 142   2        reset(); //³õÊ¼»¯18b20
 143   2        writebyte(0xcc);//Ìø¹ýROM
 144   2        writebyte(0xbe);//¶Á9¸ö¼Ä´æÆ÷£¬Ç°Á½¸öÎÂ¶È
 145   2        
 146   2        a=readbyte(); //µÍÎ»
 147   2        b=readbyte(); //¸ßÎ»
 148   2        if(b>0x0f) //ÏÔÊ¾¸ºÎÂ¶È
 149   2        {
 150   3        a=~a+1;
 151   3        if(a==0)
 152   3        b=~b+1;
 153   3        else 
 154   3        b=~b;
 155   3        flag=0xff; //ÏÔÊ¾·ûºÅÎ»-
 156   3        }
 157   2        else  //ÏÔÊ¾ÕýÎÂ¶È
 158   2        flag=0x00; //ÏÔÊ¾·ûºÅÎ»+
 159   2        ch=a&0x0f; //Ð¡ÊýµãÎ»
 160   2        a>>=4;
 161   2        b<<=4;
 162   2        b=b|a;   // ÕûÊýÎ»
 163   2        
 164   2        }
 165   1        
 166   1         return(b);
 167   1         }
 168           //*******************************
 169           //ÊýÂë¶¯Ì¬É¨Ãèº¯Êý
 170           //******************************
 171           
 172           
 173          //**************************************
 174          //Ö÷º¯Êý
 175          //***************************************
 176          
 177          void main()
C51 COMPILER V9.01   1                                                                     10/04/2012 10:52:40 PAGE 4   

 178          {
 179   1       init_12864(); 
 180   1      while(1)
 181   1      { 
 182   2      
 183   2      temp=readtemp();
 184   2      write_com(0x98);
 185   2      write_data(temp/100+0x30);
 186   2      write_data(temp%100/10+0x30); 
 187   2      write_data(temp%100%10+0x30);
 188   2      write_data('.');                  
 189   2      write_data((ch*0.6)+0x30); 
 190   2      //write_data(ch%10+0x30); 
 191   2       }
 192   1      
 193   1      }
 194           
 195          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    438    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
